[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llm-local-lab"
version = "0.1.0"
description = "Professional experimentation and benchmarking for local LLM inference"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "LLM-Local-Lab", email = "noreply@example.com"}
]
keywords = ["llm", "benchmarking", "inference", "gpu", "pytorch"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "torch>=2.9.0",
    "transformers>=4.40.0",
    "sentence-transformers>=2.7.0",
    "accelerate>=0.30.0",
    "numpy>=1.26.0",
    "pandas>=2.2.0",
    "pyyaml>=6.0.0",
    "tqdm>=4.66.0",
    "nvidia-ml-py3>=7.352.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.1.0",
    "pytest-cov>=5.0.0",
    "black>=24.3.0",
    "flake8>=7.0.0",
    "mypy>=1.9.0",
]
viz = [
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "tensorboard>=2.16.0",
]
quantization = [
    "bitsandbytes>=0.43.0",
    "optimum>=1.18.0",
    "auto-gptq>=0.7.0",
]
vector = [
    "qdrant-client>=1.9.0",
    "faiss-cpu>=1.8.0",
]
serving = [
    "fastapi>=0.110.0",
    "uvicorn>=0.29.0",
    "gradio>=4.26.0",
]

[project.urls]
Repository = "https://github.com/yourusername/llm-local-lab"
Documentation = "https://github.com/yourusername/llm-local-lab/tree/main/docs"

[tool.setuptools]
packages = ["utils"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | models/weights
)/
'''

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "benchmarks/scripts",
    "utils",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.coverage.run]
source = ["utils", "benchmarks/scripts"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
